
name: Publish canary release for loan feature

on:

  pull_request:
  
    types: [closed]
  
    branches:
      - feat/loan

jobs:

  variables:
    name: Set variables
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.vars.outputs.tag }}
      image_manage: ${{ steps.vars.outputs.image_manage }}
      image_presentation: ${{ steps.vars.outputs.image_presentation }}
      image_semcom_node: ${{ steps.vars.outputs.image_semcom_node }}
      image_semcom_components: ${{ steps.vars.outputs.image_semcom_components }}
    steps:
      - name: Set variables
        id: vars
        run: |
          echo "::set-output name=image_manage::ghcr.io/netwerk-digitaal-erfgoed/solid-crs-manage"
          echo "::set-output name=image_presentation::ghcr.io/netwerk-digitaal-erfgoed/solid-crs-presentation"
          echo "::set-output name=image_semcom_node::ghcr.io/netwerk-digitaal-erfgoed/solid-crs-semcom-node"
          echo "::set-output name=image_semcom_components::ghcr.io/netwerk-digitaal-erfgoed/solid-crs-semcom-components"

  perform-checks:

    name: Perform checks
    uses: netwerk-digitaal-erfgoed/solid-crs/.github/workflows/checks.yml@feat/loan
    secrets:
      DIGITA_PACKAGES: ${{ secrets.DIGITA_PACKAGES }}

  publish-npm:

    name: Publish npm packages
    needs: perform-checks
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    outputs:
      version: ${{ steps.publish-packages.outputs.version }}

    steps:
    
      - name: Checkout ref
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Fetch more tags
        run: git fetch --tags
      
      - name: Set up node
        uses: actions/setup-node@v2
        with:
          node-version: 14
          registry-url: https://npm.pkg.github.com
  
      - name: Install dependencies
        run: npm run bootstrap
        env:
          NODE_AUTH_TOKEN: ${{ secrets.DIGITA_PACKAGES }}

      - name: Build packages
        run: npm run build:all


          
      - name: Publish packages
        id: publish-packages
        run: |
          npx lerna publish --canary minor --no-verify-access --preid loans --dist-tag loans --yes > .git/canary-release-output
          cat .git/canary-release-output | grep '=>' | head -n 1 | cut -f 5 -d ' ' | cut -f 1 -d '+' | xargs echo name=version::v | tr -d '[:blank:]' | xargs echo ::set-output
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-docker:

    name: Publish docker images
    needs: publish-npm
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CONTAINER_REGISTRY_TOKEN }}

      - name: Build and push manage
        uses: docker/build-push-action@v2
        with:
          context: packages/solid-crs-manage/
          push: true
          tags: |
            ${{ needs.variables.outputs.image_manage }}:loans
            ${{ needs.variables.outputs.image_manage }}:${{ needs.publish-npm.outputs.version }}
          build-args: |
            NPM_TOKEN=${{secrets.DIGITA_PACKAGES}}

      - name: Build and push presentation
        uses: docker/build-push-action@v2
        with:
          context: packages/solid-crs-presentation/
          push: true
          tags: |
            ${{ needs.variables.outputs.image_presentation }}:loans
            ${{ needs.variables.outputs.image_presentation }}:${{ needs.publish-npm.outputs.version }}
          build-args: |
            NPM_TOKEN=${{secrets.DIGITA_PACKAGES}}

      - name: Build and push semcom-node
        uses: docker/build-push-action@v2
        with:
          context: packages/solid-crs-semcom-node/
          push: true
          tags: |
            ${{ needs.variables.outputs.image_semcom_node }}:loans
            ${{ needs.variables.outputs.image_semcom_node }}:${{ needs.publish-npm.outputs.version }}
          build-args: |
            NPM_TOKEN=${{secrets.DIGITA_PACKAGES}}

      - name: Build and push semcom-components
        uses: docker/build-push-action@v2
        with:
          context: packages/solid-crs-semcom-components/
          push: true
          tags: |
            ${{ needs.variables.outputs.image_semcom_components }}:loans
            ${{ needs.variables.outputs.image_semcom_components }}:${{ needs.publish-npm.outputs.version }}
          build-args: |
            NPM_TOKEN=${{secrets.DIGITA_PACKAGES}}

      - uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Store DigitalOcean credentials
        run: doctl kubernetes cluster kubeconfig save nde

      # See https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#updating-a-deployment
      - name: Update deployment
        run: |
          kubectl set image deployment/solid-crs-loans-manage app=${{ needs.variables.outputs.image_manage }}:loans --record
          kubectl set image deployment/solid-crs-loans-presentation app=${{ needs.variables.outputs.image_presentation }}:loans --record
          kubectl set image deployment/solid-crs-loans-semcom-node app=${{ needs.variables.outputs.image_semcom_node }}:loans --record
          kubectl set image deployment/solid-crs-loans-semcom-components app=${{ needs.variables.outputs.image_semcom_components }}:loans --record

      - name: Verify deployment
        run: |
          kubectl rollout status deployment/solid-crs-loans-manage
          kubectl rollout status deployment/solid-crs-loans-presentation
          kubectl rollout status deployment/solid-crs-loans-semcom-node
          kubectl rollout status deployment/solid-crs-loans-semcom-components
